# This action enables building release executables/installers and can be triggered manually or by release creation.
#
# Executables are built both for releases and for manually triggered runs, uploaded to artifacts and assets.
name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "*"

# Incremental compilation here isn't helpful
env:
  CARGO_INCREMENTAL: 0

jobs:
  release:
    strategy:
      matrix:
        build:
          - os: windows-2022
            target: x86_64-pc-windows-msvc
            suffix: windows-x86_64-${{ github.ref_name }}
            modern-rustflags: "-C target-cpu=skylake"
            rustflags: "-C target-cpu=x86-64-v2"
      fail-fast: false
    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Configure GTK4 cache (Windows)
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        id: cache
        with:
          path: C:\gtk-build\gtk\x64\release
          key: ${{ runner.os }}-gtk4
        if: runner.os == 'Windows'

      - name: Install GTK4 (Windows)
        run: |
          # TODO: Next 3 lines should have been `pipx install gvsbuild`, but https://github.com/wingtk/gvsbuild/issues/1436
          py -m venv .venv
          .\.venv\Scripts\activate.ps1
          py -m pip install gvsbuild
          gvsbuild build gtk4 librsvg
        if: runner.os == 'Windows' && steps.cache.outputs.cache-hit != 'true'

      - name: Configure GTK4 (Windows)
        run: |
          Add-Content $env:GITHUB_ENV "PKG_CONFIG_PATH=C:\gtk-build\gtk\x64\release\lib\pkgconfig"
          Add-Content $env:GITHUB_ENV ("LIB=" + $env:LIB + ";" + "C:\gtk-build\gtk\x64\release\lib")
          Add-Content $env:GITHUB_PATH "C:\gtk-build\gtk\x64\release\bin"

          # We have hardcoded list of libraries in open-worship.wxs, make sure it didn't change unexpectedly
          Get-ChildItem C:\gtk-build\gtk\x64\release\lib\gdk-pixbuf-2.0\2.10.0\loaders\*.dll | ForEach-Object { $_.Name } > actual-pixbuf-loaders.log
          if (Compare-Object -ReferenceObject (Get-Content -Path res\windows\wix\expected-pixbuf-loaders.log) -DifferenceObject (Get-Content -Path actual-pixbuf-loaders.log)) {
            Write-Output "Expected pixbuf -loaders:"
            Get-Content res\windows\wix\expected-pixbuf-loaders.log
            Write-Output "`r`nActual pixbuf loaders:"
            Get-Content actual-pixbuf-loaders.log
            Throw "Actual pixbuf loaders do not match expected"
          }

          # We have hardcoded list of libraries in open-worship.wxs, make sure it didn't change unexpectedly
          Get-ChildItem C:\gtk-build\gtk\x64\release\bin\*.dll | ForEach-Object { $_.Name } > actual-dlls.log
          if (Compare-Object -ReferenceObject (Get-Content -Path res\windows\wix\expected-dlls.log) -DifferenceObject (Get-Content -Path actual-dlls.log)) {
            Write-Output "Expected DLLs:"
            Get-Content res\windows\wix\expected-dlls.log
            Write-Output "`r`nActual DLLs:"
            Get-Content actual-dlls.log
            Throw "Actual DLLs do not match expected"
          }
        if: runner.os == 'Windows'

      - name: CUDA toolchain (Windows)
        uses: Jimver/cuda-toolkit@4bd727d5619dc6fa323b1e76c3aa5dca94f5ec6d # v0.2.19
        with:
          cuda: "12.4.1"
          method: network
          sub-packages: '["nvcc", "cudart"]'
        if: runner.os == 'Windows'

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build app (Windows, modern, CUDA)
        env:
          RUSTFLAGS: ${{ matrix.build.modern-rustflags }}
        run: |
          cargo -Zgitoxide -Zgit build --locked -Z build-std --target ${{ matrix.build.target }} --profile production --features cuda
          Move-Item -Path target\${{ matrix.build.target }}\production\open-worship.exe -Destination target\${{ matrix.build.target }}\production\open-worship-modern.exe
        if: runner.os == 'Windows' && matrix.build.modern-rustflags

      - name: Build app (Windows, normal, CUDA)
        env:
          RUSTFLAGS: ${{ matrix.build.rustflags }}
        run: cargo -Zgitoxide -Zgit build --locked -Z build-std --target ${{ matrix.build.target }} --profile production --features cuda
        if: runner.os == 'Windows'

      - name: Install cargo-wix (Windows)
        uses: taiki-e/cache-cargo-install-action@1b76958d032c4d048c599f9fdfa48abe804d6319 # v1.2.2
        with:
          tool: cargo-wix
        if: runner.os == 'Windows'

      - name: Package (Windows)
        run: |
          Remove-Item target\wix\gtk4 -Recurse -Confirm:$false -ErrorAction SilentlyContinue

          New-Item target\wix\gtk4\bin -ItemType Directory
          New-Item target\wix\gtk4\lib\gdk-pixbuf-2.0\2.10.0\loaders -ItemType Directory
          New-Item target\wix\gtk4\share\glib-2.0\schemas -ItemType Directory

          Copy-Item -Path C:\gtk-build\gtk\x64\release\bin\*.dll -Destination target\wix\gtk4\bin
          Copy-Item -Path C:\gtk-build\gtk\x64\release\bin\gdbus.exe -Destination target\wix\gtk4\bin
          Copy-Item -Path C:\gtk-build\gtk\x64\release\bin\gspawn-win64-helper.exe -Destination target\wix\gtk4\bin
          Copy-Item -Path C:\gtk-build\gtk\x64\release\bin\gspawn-win64-helper-console.exe -Destination target\wix\gtk4\bin

          Copy-Item -Path C:\gtk-build\gtk\x64\release\lib\gdk-pixbuf-2.0\2.10.0\loaders\*.dll -Destination target\wix\gtk4\lib\gdk-pixbuf-2.0\2.10.0\loaders
          Copy-Item -Path C:\gtk-build\gtk\x64\release\lib\gdk-pixbuf-2.0\2.10.0\loaders.cache -Destination target\wix\gtk4\lib\gdk-pixbuf-2.0\2.10.0

          Copy-Item -Path C:\gtk-build\gtk\x64\release\share\glib-2.0\schemas\gschemas.compiled -Destination target\wix\gtk4\share\glib-2.0\schemas\gschemas.compiled

          # TODO: Ideally something like this would have worked and we wouldn't need to hardcode stuff in `open-worship.wxs`: https://github.com/volks73/cargo-wix/issues/271
          # & "C:\Program Files (x86)\WiX Toolset v3.11\bin\heat.exe" dir target\wix\gtk4 -gg -sfrag -template:fragment -out target\wix\gtk4.wxs -cg GTK -dr GTK

          cargo wix --target ${{ matrix.build.target }} --profile production --no-build --nocapture

          Remove-Item target\wix\gtk4 -Recurse -Confirm:$false -ErrorAction SilentlyContinue
        if: runner.os == 'Windows'

      - name: Sign installer (Windows)
        run: |
          $ErrorActionPreference = "Stop"

          dotnet tool install --global AzureSignTool

          # `-Recurse` is needed or PowerShell will not find the file
          (Get-ChildItem -Path target\wix -Include open-worship-*.msi -Recurse) | ForEach-Object {
            Write("Signing $($_)");

            AzureSignTool sign --azure-key-vault-url "${{ secrets.AZURE_KEY_VAULT_URI }}" --azure-key-vault-client-id "${{ secrets.AZURE_CLIENT_ID }}" --azure-key-vault-client-secret "${{ secrets.AZURE_CLIENT_SECRET }}" --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" --azure-key-vault-certificate "${{ secrets.AZURE_CERT_NAME }}" --file-digest sha512 --timestamp-rfc3161 http://timestamp.digicert.com -v $($_);
          }
        # Allow code signing to fail on non-release builds and in non-autonomys repos (forks)
        continue-on-error: ${{ github.repository_owner != 'autonomys' || github.event_name != 'push' || github.ref_type != 'tag' }}
        if: runner.os == 'Windows'

      - name: Create bundle (Windows)
        run: |
          # Create a bundle with Microsoft Visual C++ Redistributable in it
          Remove-Item target\wix\open-worship.wixobj -Confirm:$false
          cargo wix --profile release --no-build --nocapture --include res\windows\wix\bundle.wxs -C -ext -C WixBalExtension
        if: runner.os == 'Windows'

      - name: Sign bundle (Windows)
        run: |
          $ErrorActionPreference = "Stop"

          dotnet tool install --global AzureSignTool

          # `-Recurse` is needed or PowerShell will not find the file
          (Get-ChildItem -Path target\wix -Include open-worship-*.exe -Recurse) | ForEach-Object {
            Write("Signing $($_)");

            # Detach burn engine, which also needs to be signed
            insignia -ib $($_) -o engine.exe;
            AzureSignTool sign --azure-key-vault-url "${{ secrets.AZURE_KEY_VAULT_URI }}" --azure-key-vault-client-id "${{ secrets.AZURE_CLIENT_ID }}" --azure-key-vault-client-secret "${{ secrets.AZURE_CLIENT_SECRET }}" --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" --azure-key-vault-certificate "${{ secrets.AZURE_CERT_NAME }}" --file-digest sha512 --timestamp-rfc3161 http://timestamp.digicert.com -v engine.exe;
            # Attach signed burn engine
            insignia -ab engine.exe $($_) -o $($_);
            AzureSignTool sign --azure-key-vault-url "${{ secrets.AZURE_KEY_VAULT_URI }}" --azure-key-vault-client-id "${{ secrets.AZURE_CLIENT_ID }}" --azure-key-vault-client-secret "${{ secrets.AZURE_CLIENT_SECRET }}" --azure-key-vault-tenant-id "${{ secrets.AZURE_TENANT_ID }}" --azure-key-vault-certificate "${{ secrets.AZURE_CERT_NAME }}" --file-digest sha512 --timestamp-rfc3161 http://timestamp.digicert.com -v $($_);
          }
        # Allow code signing to fail on non-release builds and in non-autonomys repos (forks)
        continue-on-error: ${{ github.repository_owner != 'autonomys' || github.event_name != 'push' || github.ref_type != 'tag' }}
        if: runner.os == 'Windows'

      - name: Upload installer to artifacts (Windows)
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.1.3
        with:
          name: open-worship-${{ matrix.build.suffix }}
          path: |
            target/wix/*.exe
          if-no-files-found: error
        if: runner.os == 'Windows'

      - name: Upload installer to assets (Windows)
        uses: alexellis/upload-assets@13926a61cdb2cb35f5fdef1c06b8b591523236d3 # 0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["target/wix/*.exe"]'
        if: runner.os == 'Windows' && github.event_name == 'push' && github.ref_type == 'tag'
