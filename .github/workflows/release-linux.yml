name: Release

on:
  workflow_call:

# Incremental compilation here isn't helpful
env:
  CARGO_INCREMENTAL: 0

jobs:
  release:
    strategy:
      matrix:
        build:
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            suffix: ubuntu-x86_64-${{ github.ref_name }}
            modern-rustflags: "-C target-cpu=skylake"
            rustflags: "-C target-cpu=x86-64-v2"
          - os: ubuntu-24.04-arm
            target: aarch64-unknown-linux-gnu
            suffix: ubuntu-aarch64-${{ github.ref_name }}
            rustflags: ""
      fail-fast: false
    runs-on: ${{ matrix.build.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install GTK4 and libfuse2 (Linux)
        # libfuse2 is needed for AppImage to run, librsvg2-dev is needed for AppImage to support SVG icons properly
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y libgtk-4-dev libfuse2 librsvg2-dev
        if: runner.os == 'Linux'

      - name: CUDA toolchain (Ubuntu)
        run: sudo apt-get install -y --no-install-recommends nvidia-cuda-toolkit
        if: runner.os == 'Linux'

      - name: Configure cache
        uses: actions/cache@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-deb (Linux)
        uses: taiki-e/cache-cargo-install-action@1b76958d032c4d048c599f9fdfa48abe804d6319 # v1.2.2
        with:
          tool: cargo-deb
        if: runner.os == 'Linux'

      - name: Package (Linux, with modern)
        run: ./build-linux.sh
        if: runner.os == 'Linux' && matrix.build.modern-rustflags

      - name: Package (Linux, without modern)
        run: ./build-linux.sh
        if: runner.os == 'Linux' && !matrix.build.modern-rustflags

      - name: Upload installer to artifacts (Linux)
        uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.1.3
        with:
          name: open-worship-${{ matrix.build.suffix }}
          path: |
            open-worship-*.AppImage
            open-worship*.deb
          if-no-files-found: error
        if: runner.os == 'Linux'

      - name: Upload installer to assets (Linux)
        uses: alexellis/upload-assets@13926a61cdb2cb35f5fdef1c06b8b591523236d3 # 0.4.1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          asset_paths: '["open-worship-*.AppImage", "open-worship*.deb"]'
        if: runner.os == 'Linux' && github.event_name == 'push' && github.ref_type == 'tag'
